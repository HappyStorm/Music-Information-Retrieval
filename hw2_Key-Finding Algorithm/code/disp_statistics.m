function [] = disp_statistics(sta_bi_q1, sta_bi_q3, sta_ks_q1, sta_ks_q3,...
                              total_score_bi, total_size_bi,...
                              total_score_ks, total_size_ks)
    disp(sta_bi_q1);
    disp(sta_bi_q3);
    disp(sta_ks_q1);
    disp(sta_ks_q3);

    fprintf('Binary Overall Accuracy (Q1):\n');
    fprintf('\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\n',...
            1,    total_score_bi{1, 1}(1) / total_size_bi{1, 1}(1) * 100,...
            10,   total_score_bi{1, 1}(2) / total_size_bi{1, 1}(2) * 100,...
            100,  total_score_bi{1, 1}(3) / total_size_bi{1, 1}(3) * 100,...
            1000, total_score_bi{1, 1}(4) / total_size_bi{1, 1}(4) * 100);

    fprintf('Binary Overall Accuracy (Q3):\n');
    fprintf('\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\n',...
            1,    total_score_bi{2, 1}(1) / total_size_bi{2, 1}(1) * 100,...
            10,   total_score_bi{2, 1}(2) / total_size_bi{2, 1}(2) * 100,...
            100,  total_score_bi{2, 1}(3) / total_size_bi{2, 1}(3) * 100,...
            1000, total_score_bi{2, 1}(4) / total_size_bi{2, 1}(4) * 100);

    fprintf('KSalgo Overall Accuracy (Q1):\n');
    fprintf('\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\n',...
            1,    total_score_ks{1, 1}(1) / total_size_ks{1, 1}(1) * 100,...
            10,   total_score_ks{1, 1}(2) / total_size_ks{1, 1}(2) * 100,...
            100,  total_score_ks{1, 1}(3) / total_size_ks{1, 1}(3) * 100,...
            1000, total_score_ks{1, 1}(4) / total_size_ks{1, 1}(4) * 100);

    fprintf('KSalgo Overall Accuracy (Q3):\n');
    fprintf('\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n\tGa-%-4d: %.3f %%\n',...
            1,    total_score_ks{2, 1}(1) / total_size_ks{2, 1}(1) * 100,...
            10,   total_score_ks{2, 1}(2) / total_size_ks{2, 1}(2) * 100,...
            100,  total_score_ks{2, 1}(3) / total_size_ks{2, 1}(3) * 100,...
            1000, total_score_ks{2, 1}(4) / total_size_ks{2, 1}(4) * 100);
end